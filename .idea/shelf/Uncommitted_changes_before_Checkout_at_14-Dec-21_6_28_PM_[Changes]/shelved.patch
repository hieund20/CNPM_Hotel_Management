Index: src/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nfrom flask import request\r\nfrom flask_admin import Admin, expose, BaseView\r\nfrom src import app, db, utils\r\nfrom flask_admin.contrib.sqla import ModelView\r\nfrom flask_admin import AdminIndexView\r\nfrom src.models import Room, TypeRoom, RentalVoucher\r\n\r\n\r\nclass MyAdminIndexView(AdminIndexView):\r\n    @expose('/')\r\n    def index(self):\r\n        return self.render('admin/index.html')\r\n\r\n\r\nclass Home_page(BaseView):\r\n    @expose('/')\r\n    def index(self):\r\n        return self.render('index.html')\r\n\r\nclass RoomView(ModelView):\r\n    column_display_pk = True\r\n    can_view_details = True\r\n    can_export = True\r\n    edit_modal = True\r\n    details_modal = True\r\n    column_exclude_list = ['rentalVoucher']\r\n    column_filters = ['quantity_bed', 'price']\r\n    column_searchable_list = ['quantity_bed', 'price']\r\n    column_labels = {\r\n        'id': 'Mã phòng',\r\n        'quantity_bed': 'Số giường',\r\n        'price': 'Giá',\r\n        'status': 'Trạng thái',\r\n        'typeRoom': 'Loại phòng',\r\n        'rentalVoucher': 'Phiếu thuê phòng'\r\n    }\r\n    form_excluded_columns = ['receiptDetails', 'rentalVoucher']\r\n\r\n\r\nclass TypeRoomView(ModelView):\r\n    column_display_pk = True\r\n    can_view_details = True\r\n    can_export = True\r\n    edit_modal = True\r\n    details_modal = True\r\n    column_filters = ['id','type_room_name']\r\n    column_searchable_list = ['id','type_room_name']\r\n    column_labels = {\r\n        'id': 'Mã thuê phòng',\r\n        'type_room_name': 'Tên loại phòng'\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nclass StatsView(BaseView):\r\n    @expose('/')\r\n    def index(self):\r\n        type_rooms_list = utils.get_all_type_rooms()\r\n        used_type_room_counter = utils.get_used_quantity_type_room_in_month()\r\n        return self.render('admin/stats.html',\r\n                           type_rooms_list=type_rooms_list,\r\n                           used_type_room_counter=used_type_room_counter)\r\n\r\n\r\nadmin = Admin(app=app, name='Admin page', template_mode='bootstrap4', index_view=MyAdminIndexView())\r\nadmin.add_view(Home_page(name='Website'))\r\nadmin.add_view(RoomView(Room, db.session, name='Phòng'))\r\nadmin.add_view(TypeRoomView(TypeRoom, db.session, name='Loại phòng'))\r\nadmin.add_view(StatsView(name='Thống kê'))\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/admin.py b/src/admin.py
--- a/src/admin.py	(revision 012a497ba8365a9576f0186120275cc21c3046bf)
+++ b/src/admin.py	(date 1639455360788)
@@ -18,6 +18,7 @@
     def index(self):
         return self.render('index.html')
 
+
 class RoomView(ModelView):
     column_display_pk = True
     can_view_details = True
@@ -52,9 +53,6 @@
     }
 
 
-
-
-
 class StatsView(BaseView):
     @expose('/')
     def index(self):
Index: src/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask\r\nfrom flask_sqlalchemy import SQLAlchemy\r\n\r\nfrom flask_babelex import Babel\r\napp = Flask(__name__)\r\napp.secret_key = 'sfsjfffehr4$#$@$@$%^^^$^%@$GG'\r\napp.config[\"SQLALCHEMY_DATABASE_URI\"] = \"mysql+pymysql://root:12345678@localhost/hotel?charset=utf8mb4\"\r\napp.config[\"SQLALCHEMY_TRACK_MODIFICATIONS\"] = True\r\n\r\ndb = SQLAlchemy(app=app)\r\nbabel = Babel(app=app)\r\n@babel.localeselector\r\ndef get_locale():\r\n        # Put your logic here. Application can store locale in\r\n        # user profile, cookie, session, etc.\r\n        return 'vi'\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/__init__.py b/src/__init__.py
--- a/src/__init__.py	(revision 012a497ba8365a9576f0186120275cc21c3046bf)
+++ b/src/__init__.py	(date 1639455773939)
@@ -1,10 +1,10 @@
 from flask import Flask
 from flask_sqlalchemy import SQLAlchemy
-
 from flask_babelex import Babel
+
 app = Flask(__name__)
 app.secret_key = 'sfsjfffehr4$#$@$@$%^^^$^%@$GG'
-app.config["SQLALCHEMY_DATABASE_URI"] = "mysql+pymysql://root:12345678@localhost/hotel?charset=utf8mb4"
+app.config["SQLALCHEMY_DATABASE_URI"] = "mysql+pymysql://root:Duchieu200301@localhost/hotel_management_db?charset=utf8mb4"
 app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = True
 
 db = SQLAlchemy(app=app)
