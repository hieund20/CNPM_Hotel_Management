Index: src/utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from sqlalchemy import func, extract\r\nimport hashlib\r\nfrom datetime import datetime\r\n\r\nimport mysql.connector\r\nfrom sqlalchemy import desc, asc\r\nfrom sqlalchemy import func, extract\r\n\r\nfrom src import app, db\r\nfrom src.models import Room, TypeRoom, ReceiptDetail, User, Receipt, RentalVoucher, \\\r\n    RentalVoucherDetail, BookingRoom\r\n\r\nmydb = mysql.connector.connect(\r\n    host=\"localhost\",\r\n    user=\"root\",\r\n    passwd=\"12345678\",\r\n    database=\"hotel\"\r\n)\r\n\r\n\r\ndef get_all_type_rooms():\r\n    return TypeRoom.query.all()\r\n\r\n\r\n# Get used quantity type room in current month\r\ndef get_used_quantity_type_room_in_month():\r\n    query = db.session.query(TypeRoom.id, TypeRoom.type_room_name, func.count(TypeRoom.id), ).filter(\r\n        Room.type_room_id == TypeRoom.id).filter(Room.id == ReceiptDetail.room_id).filter(\r\n        extract('month', ReceiptDetail.receive_day) == datetime.now().month).group_by(TypeRoom.id,\r\n                                                                                      TypeRoom.type_room_name)\r\n    return query.all()\r\n\r\n\r\ndef add_user(username, password, email):\r\n    password = str(hashlib.md5(password.strip().encode('utf-8')).hexdigest())\r\n    user = User(username=username.strip(), password=password,\r\n                email=email)\r\n\r\n    db.session.add(user)\r\n    db.session.commit()\r\n\r\n\r\ndef check_login(username, password):\r\n    if username and password:\r\n        password = str(hashlib.md5(password.strip().encode(\r\n            'utf-8')).hexdigest())  # hash bằng md5 khi create password thì cũng hash bằng md5 khi login\r\n\r\n        return User.query.filter(User.username.__eq__(username.strip()),\r\n                                 User.password.__eq__(password)).first()\r\n\r\n\r\ndef get_user_by_id(user_id):\r\n    return User.query.get(user_id)\r\n\r\n\r\ndef count_cart(cart):\r\n    quantity, amount = 0, 0\r\n    if cart:\r\n        for i in cart.values():\r\n            quantity += i['quantity']\r\n            amount += i['quantity'] * i['price']\r\n    return {\r\n        'totalQuantity': quantity,\r\n        'totalAmount': amount\r\n    }\r\n\r\n\r\ndef is_name_in_receipt(name):\r\n    return Receipt.query.filter(Receipt.visitor_name.__eq__(name)).first()\r\n\r\n\r\ndef add_receipt(name, address, price):\r\n    new = Receipt(visitor_name=name, address=address, price=price)\r\n    db.session.add(new)\r\n    db.session.commit()\r\n\r\n\r\ndef get_user_by_name(name):\r\n    return User.query.filter(User.username.__eq__(name)).first()\r\n\r\n\r\ndef get_all_rooms(page):\r\n    page_size = app.config['PAGE_SIZE']\r\n    start = (page - 1) * page_size\r\n    end = start + page_size\r\n\r\n    query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id,\r\n                             Room.rental_voucher, Room.image, Room.descriptions, TypeRoom.type_room_name).filter(\r\n        Room.type_room_id == TypeRoom.id)\r\n\r\n    return query.slice(start, end).all()\r\n\r\n\r\ndef get_room_by_id(room_id):\r\n    return Room.query.get(room_id)\r\n\r\n\r\ndef get_type_room_by_room_id(room_id):\r\n    query = db.session.query(TypeRoom.type_room_name).filter(Room.type_room_id == TypeRoom.id).filter(\r\n        Room.id == room_id)\r\n    return query.all()\r\n\r\n\r\ndef cart_stats(cart):\r\n    total_amount, total_quantity = 0, 0\r\n    if cart:\r\n        for p in cart.values():\r\n            total_quantity += p[\"quantity\"]\r\n            total_amount = p[\"price\"]\r\n\r\n    return total_quantity, total_amount\r\n\r\n\r\ndef add_receipt_detail(room_id, room_name, price, quantity, receive_day, pay_day, person_amount):\r\n    receipt_detail = ReceiptDetail(room_id=room_id,\r\n                                   room_name=room_name,\r\n                                   price=price,\r\n                                   quantity=quantity,\r\n                                   receive_day=receive_day,\r\n                                   pay_day=pay_day,\r\n                                   person_amount=person_amount)\r\n    db.session.add(receipt_detail)\r\n    db.session.commit()\r\n\r\n\r\ndef get_user_by_name(name):\r\n    return User.query.filter(User.username.__eq__(name)).first()\r\n\r\n\r\ndef total_room_by_receiptId(receipt_id):\r\n    # receipt=ReceiptDetail.query.filter(ReceiptDetail.user_id.__eq__(user_id))\r\n    # receipt=ReceiptDetail.query.all()\r\n    # return  db.session.query(func.count(ReceiptDetail.id))\r\n\r\n    return ReceiptDetail.query.all()\r\n\r\n\r\ndef get_list_receipt_detail():\r\n    # list=ReceiptDetail.query.filter(ReceiptDetail.receipt_id.__eq__(receipt_id))\r\n    query = db.session.query(Room.image, ReceiptDetail.room_name, ReceiptDetail.id, ReceiptDetail.pay_day,\r\n                             ReceiptDetail.price, ReceiptDetail.quantity, ReceiptDetail.receive_day,\r\n                             ReceiptDetail.person_amount, Room.id).filter(Room.id == ReceiptDetail.room_id)\r\n    print('query default', query)\r\n    return query.all()\r\n\r\n\r\ndef total_money(user_id):\r\n    # rd = ReceiptDetail.query.filter(ReceiptDetail.user_id.__eq__(user_id))\r\n    rd = ReceiptDetail.query.all()\r\n    total = 0\r\n    for r in rd:\r\n        total += r.price\r\n    return total\r\n\r\n\r\ndef delete_Receipt_detail(id):\r\n    mycursor = mydb.cursor()\r\n    sql = \"DELETE FROM receipt_detail WHERE id = \" + id\r\n    mycursor.execute(sql)\r\n    mydb.commit()\r\n\r\n\r\ndef count_rooms(type_room_id, quantity_bed, price_order_by):\r\n    query = \"\"\r\n    if (type_room_id == '' and quantity_bed == '' and price_order_by == '') or \\\r\n            (type_room_id is None and quantity_bed is None and price_order_by is None):\r\n        query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                 Room.descriptions, TypeRoom.type_room_name).filter(\r\n            Room.type_room_id == TypeRoom.id).order_by(asc(Room.price))\r\n    if price_order_by == 'asc':\r\n        if quantity_bed == '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).order_by(asc(Room.price))\r\n        if quantity_bed == '' and type_room_id != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).order_by(asc(Room.price))\r\n        if quantity_bed != '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.quantity_bed == quantity_bed).order_by(asc(Room.price))\r\n        if type_room_id != '' and quantity_bed != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).filter(\r\n                Room.quantity_bed == quantity_bed).order_by(asc(Room.price))\r\n    if price_order_by == 'desc':\r\n        if quantity_bed == '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).order_by(desc(Room.price))\r\n        if quantity_bed == '' and type_room_id != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).order_by(desc(Room.price))\r\n        if quantity_bed != '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.quantity_bed == quantity_bed).order_by(desc(Room.price))\r\n        if type_room_id != '' and quantity_bed != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).filter(\r\n                Room.quantity_bed == quantity_bed).order_by(desc(Room.price))\r\n\r\n    return len(query.all())\r\n\r\n\r\ndef filters_room(type_room_id, quantity_bed, price_order_by, page):\r\n    page_size = app.config['PAGE_SIZE']\r\n    start = (page - 1) * page_size\r\n    end = start + page_size\r\n\r\n    query = \"\"\r\n    if (type_room_id == '' and quantity_bed == '' and price_order_by == '') or \\\r\n            (type_room_id is None and quantity_bed is None and price_order_by is None):\r\n        query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                 Room.descriptions, TypeRoom.type_room_name).filter(\r\n            Room.type_room_id == TypeRoom.id).order_by(asc(Room.price))\r\n    if price_order_by == 'asc':\r\n        if quantity_bed == '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).order_by(asc(Room.price))\r\n        if quantity_bed == '' and type_room_id != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).order_by(asc(Room.price))\r\n        if quantity_bed != '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.quantity_bed == quantity_bed).order_by(asc(Room.price))\r\n        if type_room_id != '' and quantity_bed != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).filter(\r\n                Room.quantity_bed == quantity_bed).order_by(asc(Room.price))\r\n    if price_order_by == 'desc':\r\n        if quantity_bed == '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).order_by(desc(Room.price))\r\n        if quantity_bed == '' and type_room_id != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).order_by(desc(Room.price))\r\n        if quantity_bed != '' and type_room_id == '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.quantity_bed == quantity_bed).order_by(desc(Room.price))\r\n        if type_room_id != '' and quantity_bed != '':\r\n            query = db.session.query(Room.id, Room.quantity_bed, Room.price, Room.status, Room.type_room_id, Room.image,\r\n                                     Room.descriptions, TypeRoom.type_room_name).filter(\r\n                Room.type_room_id == TypeRoom.id).filter(Room.type_room_id == type_room_id).filter(\r\n                Room.quantity_bed == quantity_bed).order_by(desc(Room.price))\r\n\r\n    return query.slice(start, end).all()\r\n\r\n\r\n# Add cart\r\ndef add_rental_voucher(booking_date):\r\n    rental_voucher = RentalVoucher(booking_date=booking_date)\r\n    db.session.add(rental_voucher)\r\n    db.session.commit()\r\n\r\n\r\n# Payment\r\ndef add_rental_voucher_detail(visit_name, type_visit_id, phone_number, rental_voucher_id, email, visit_name_id, nation):\r\n    rental_voucher_detail = RentalVoucherDetail(visit_name=visit_name,\r\n                                                type_visit_id=type_visit_id,\r\n                                                phone_number=phone_number,\r\n                                                rental_voucher_id=rental_voucher_id,\r\n                                                email=email,\r\n                                                visit_name_id=type_visit_id,\r\n                                                nation=nation)\r\n    db.session.add(rental_voucher_detail)\r\n    db.session.commit()\r\n\r\n\r\ndef get_new_record_rental_voucher_detai():\r\n    query = db.session.query(RentalVoucherDetail.id).order_by(RentalVoucherDetail.id.desc())\r\n    return query.first()\r\n\r\ndef get_info_payer(id):\r\n    query = db.session.query(RentalVoucherDetail.visit_name, RentalVoucherDetail.phone_number,\r\n                             RentalVoucherDetail.email,RentalVoucherDetail.nation).filter(RentalVoucherDetail.id == id)\r\n    return query.first()\r\n\r\ndef delete_all_receipt_detail():\r\n    query = db.session.query(ReceiptDetail).delete()\r\n    db.session.commit()\r\n\r\n\r\ndef add_booking_room(room_id,\r\n                     room_name,\r\n                     price,\r\n                     image,\r\n                     receive_day,\r\n                     pay_day,\r\n                     person_amount,\r\n                     rental_voucher_detail_id):\r\n    booking_room = BookingRoom(room_id=room_id,\r\n                               room_name=room_name,\r\n                               price=price,\r\n                               image=image,\r\n                               receive_day=receive_day,\r\n                               pay_day=pay_day,\r\n                               person_amount=person_amount,\r\n                               rental_voucher_detail_id=rental_voucher_detail_id)\r\n    db.session.add(booking_room)\r\n    db.session.commit()\r\n\r\ndef get_info_booking_room():\r\n    return BookingRoom.query.all()\r\n\r\ndef total_money_booking_room():\r\n    b = BookingRoom.query.all()\r\n    total = 0\r\n    for i in b:\r\n        total += i.price\r\n    return total\r\n\r\ndef delete_Receipt_detail():\r\n    mycursor = mydb.cursor()\r\n    sql = \"DELETE FROM booking_room\"\r\n    mycursor.execute(sql)\r\n    mydb.commit()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utils.py b/src/utils.py
--- a/src/utils.py	(revision 6bee408f1aeaa7b2d77073d60804264e40005d55)
+++ b/src/utils.py	(date 1641819444005)
@@ -321,8 +321,3 @@
         total += i.price
     return total
 
-def delete_Receipt_detail():
-    mycursor = mydb.cursor()
-    sql = "DELETE FROM booking_room"
-    mycursor.execute(sql)
-    mydb.commit()
\ No newline at end of file
Index: src/templates/history-payments.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'layout/base.html' %}\r\n\r\n{% block title %}Lịch sử thanh toán{% endblock %}\r\n\r\n{% block content %}\r\n    <div class=\"container border-history\">\r\n        <h1 class=\"title-history\">LỊCH SỬ THANH TOÁN</h1>\r\n        {% if list_booking_room %}\r\n        <div class=\"row history-payments\" id=\"border-history\">\r\n            <div class=\"col-lg-6\">\r\n                <div class=\"row list-cart\" id=\"list-room\">\r\n                    <input type=\"text\" class=\"search-cart\" onkeyup=\"searchCart(this)\"  placeholder=\"Tìm kiếm theo tên...\"\r\n                           title=\"Tìm kiếm theo tên\">\r\n                    {% for i in list_booking_room %}\r\n                    <div class=\"row col-lg-12 lc  room-cart\" style=\"padding-left: 0; margin-left:5px\">\r\n\r\n                        <div class=\"col-lg-3\">\r\n                            <img src=\"{{i.image}}\">\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"name-room\">\r\n                                <span id=\"name-cart\">{{i.room_name}}</span>\r\n                                <span class=\"person-amount\">{{i.person_amount}} người</span>\r\n                            </div>\r\n                            <div class=\"date-order\">\r\n                                <div>Ngày nhận: <span class=\"color-gray\">{{i.pay_day}}</span></div>\r\n                                <span>Ngày trả: <span class=\"color-gray\">{{i.receive_day}}</span></span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-2 color-money\">\r\n                            {{i.price}}$\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    {% endfor %}\r\n                </div>\r\n                {% if current_user.is_authenticated and current_user.user_role.value == 3 %}\r\n                <input type=\"submit\" value=\"Nhận phòng\" class=\"btn btn-check-in\" onclick=\"deleteBookingRoom()\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                {% endif %}\r\n            </div>\r\n            <div class=\"col-lg-5\">\r\n                <div class=\"border-if\">\r\n                    <h4 >Thông tin người thanh toán</h4>\r\n                    <div><span>Tên: </span>&emsp;&emsp;&emsp;&emsp;&ensp;&ensp;&ensp;{{info_payer.visit_name}}</div>\r\n                    <div><span>Số điện thoại: </span>&emsp;{{info_payer.phone_number}}</div>\r\n                    <div><span>Email: </span>&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;{{info_payer.email}}</div>\r\n                    <div><span>Quốc tịch:</span>&nbsp;&nbsp;&nbsp;&emsp;&emsp;{{info_payer.nation}}</div>\r\n                </div>\r\n                <div class=\"total-money-his\">Tổng tiền: <span>{{total_money}}$</span></div>\r\n            </div>\r\n        </div>\r\n        {% else %}\r\n        <div class=\"checked text-center\">Cảm ơn bạn đã lựa chọn dịch vụ của Lotus Hotel!</div>\r\n        {% endif %}\r\n        <h3 id=\"tb-his\" class=\"checked text-center\" style=\"display:none\">Thanh toán thành công!!!</h3>\r\n    </div>\r\n\r\n    <!-- Modal -->\r\n    <script>\r\n            $(document).ready(function () {\r\n               var is_open_modal = '{{ is_open_modal }}'\r\n               console.log('is open modal', is_open_modal)\r\n               if (is_open_modal === 'True'){\r\n                  $('#exampleModal').modal('show');\r\n               }\r\n            });\r\n\r\n\r\n    </script>\r\n    <div class=\"modal fade\" id=\"exampleModal\" style=\"z-index: 90000000000\" tabindex=\"9\" aria-labelledby=\"exampleModalLabel\"\r\n     aria-hidden=\"true\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Trạng thái</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div style=\"display: flex; align-items:center\">\r\n                    <div class=\"icon-payment-success\" style=\"width: 50px; height: 50px\">\r\n                        <img src=\"https://res.cloudinary.com/dwgjmgf6o/image/upload/v1641224187/icons/success-icon_bmd0a4.png\"\r\n                             alt=\"icon-payment\"\r\n                             style=\"width: 100%\"/>\r\n                    </div>\r\n                    <div style=\"display:flex; align-items:center; margin-left: 16px;\">\r\n                        <p style=\"margin: 8px auto;\">Nhận phòng thành công!!!</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\"\r\n                        class=\"btn btn-secondary\"\r\n                        data-bs-dismiss=\"modal\"\r\n                >Đóng\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/templates/history-payments.html b/src/templates/history-payments.html
--- a/src/templates/history-payments.html	(revision 6bee408f1aeaa7b2d77073d60804264e40005d55)
+++ b/src/templates/history-payments.html	(date 1641812693330)
@@ -9,10 +9,12 @@
         <div class="row history-payments" id="border-history">
             <div class="col-lg-6">
                 <div class="row list-cart" id="list-room">
-                    <input type="text" class="search-cart" onkeyup="searchCart(this)"  placeholder="Tìm kiếm theo tên..."
-                           title="Tìm kiếm theo tên">
+                    <input type="text" class="search-cart"
+                           style="margin-left: 0"
+                           onkeypress="searchBookingRoom(event, this)"  placeholder="Nhập mã phòng..."
+                           title="Tìm kiếm mã phòng">
                     {% for i in list_booking_room %}
-                    <div class="row col-lg-12 lc  room-cart" style="padding-left: 0; margin-left:5px">
+                    <div class="row col-lg-12 lc  room-cart" id="{{i.id}}" style="padding-left: 0; margin-left:5px; display: none">
 
                         <div class="col-lg-3">
                             <img src="{{i.image}}">
@@ -38,8 +40,11 @@
                     {% endfor %}
                 </div>
                 {% if current_user.is_authenticated and current_user.user_role.value == 3 %}
-                <input type="submit" value="Nhận phòng" class="btn btn-check-in" onclick="deleteBookingRoom()"
-                data-bs-toggle="modal" data-bs-target="#exampleModal">
+                <input type="submit" value="Nhận phòng" id="btn-check-in" class="btn btn-check-in"
+                       onclick="deleteBookingRoom()"
+                       data-bs-toggle="modal"
+                       data-bs-target="#exampleModal"
+                       disabled >
                 {% endif %}
             </div>
             <div class="col-lg-5">
@@ -56,9 +61,8 @@
         {% else %}
         <div class="checked text-center">Cảm ơn bạn đã lựa chọn dịch vụ của Lotus Hotel!</div>
         {% endif %}
-        <h3 id="tb-his" class="checked text-center" style="display:none">Thanh toán thành công!!!</h3>
+        <h3 id="tb-his" class="checked text-center" style="display:none">Nhận phòng thành công!!!</h3>
     </div>
-
     <!-- Modal -->
     <script>
             $(document).ready(function () {
Index: src/static/css/history.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.border-history{\r\n    border: 1px solid #aba5a5;\r\n    margin-top: 48px;\r\n    margin-bottom: 48px;\r\n}\r\n\r\n.title-history{\r\n    color: #a7783e;\r\n    margin: 35px 0 45px 20px;\r\n}\r\n\r\n.history-payments #list-room input{\r\n    margin: 0 5% 0 7%;\r\n    width: 90%;\r\n}\r\n\r\n/* info */\r\n\r\n.border-if{\r\n    border: 2px dotted  black;\r\n    margin-left: 10%;\r\n    width: 100%;\r\n    margin-bottom: 35px;\r\n    padding-bottom: 25px;\r\n    padding-left: 20px;\r\n}\r\n\r\n.border-if > h4{\r\n    margin: 25px 0 25px 0;\r\n}\r\n\r\n.border-if span{\r\n    font-style: oblique;\r\n}\r\n\r\n.total-money-his{\r\n    margin: 15px 0 15px 10%;\r\n    font-size: 23px;\r\n}\r\n\r\n.total-money-his > span{\r\n    margin-left: 15px;\r\n    color: #5f4321;\r\n}\r\n\r\n.btn-check-in{\r\n    margin: 1% 1% 35px 1%;\r\n    width: 100%;\r\n    font-size: 16x;\r\n    background-color: #d9bb8b;\r\n    transition: 0.7s;\r\n}\r\n\r\n.btn-check-in:hover{\r\n    background-color: black;\r\n    color: white;\r\n}\r\n\r\n.checked{\r\n    margin: 70px auto;\r\n    color: black;\r\n    font-style: oblique;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/static/css/history.css b/src/static/css/history.css
--- a/src/static/css/history.css	(revision 6bee408f1aeaa7b2d77073d60804264e40005d55)
+++ b/src/static/css/history.css	(date 1641812648144)
@@ -1,12 +1,11 @@
 .border-history{
-    border: 1px solid #aba5a5;
     margin-top: 48px;
     margin-bottom: 48px;
 }
 
 .title-history{
     color: #a7783e;
-    margin: 35px 0 45px 20px;
+    margin: 35px 0 45px 0px;
 }
 
 .history-payments #list-room input{
@@ -44,7 +43,7 @@
 }
 
 .btn-check-in{
-    margin: 1% 1% 35px 1%;
+    margin: 5% 1% 35px 1%;
     width: 100%;
     font-size: 16x;
     background-color: #d9bb8b;
Index: src/index.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import hashlib\r\nimport hmac\r\nimport json\r\nimport math\r\nimport os\r\nimport re\r\nimport smtplib\r\nimport urllib\r\nimport uuid\r\nfrom datetime import datetime\r\n\r\nimport utils\r\nfrom urllib.request import urlopen, Request\r\nfrom flask import Flask, render_template, request, url_for, redirect, session, jsonify, make_response\r\nfrom flask_login import login_user, logout_user\r\nfrom src import app, login\r\nfrom src.admin import *\r\nimport requests\r\n\r\n\r\n@app.context_processor\r\ndef repos():\r\n    return {\r\n        \"cart\": len(utils.total_room_by_receiptId(0))\r\n    }\r\n\r\n\r\n@app.route('/', methods=['post', 'get'])\r\ndef home_page():\r\n    filter_room_list = []\r\n    type_room_id = \"\"\r\n    quantity_bed = \"\"\r\n    price_sort = \"\"\r\n\r\n    if request.method.__eq__('POST'):\r\n        type_room_id = request.form.get('type-room-id')\r\n        quantity_bed = request.form.get('quantity-bed')\r\n        price_sort = request.form.get('price-sort')\r\n\r\n    page = request.args.get('page', 1)\r\n    filter_room_list = utils.filters_room(type_room_id=type_room_id,\r\n                                          quantity_bed=quantity_bed,\r\n                                          price_order_by=price_sort,\r\n                                          page=int(page))\r\n\r\n    page_counter = utils.count_rooms(type_room_id=type_room_id,\r\n                                     quantity_bed=quantity_bed,\r\n                                     price_order_by=price_sort)\r\n\r\n    current_page = math.ceil(page_counter / app.config['PAGE_SIZE'])\r\n\r\n    return render_template('index.html',\r\n                           filter_room_list=filter_room_list,\r\n                           pages=current_page,\r\n                           type_room_id=type_room_id,\r\n                           price_sort=price_sort)\r\n\r\n\r\n@app.route('/about')\r\ndef about_us_page():\r\n    return render_template('about-us.html')\r\n\r\n\r\n\r\n@app.route('/register', methods=['post', 'get'])\r\ndef user_register():\r\n    err_msg = \"\"\r\n    if request.method.__eq__('POST'):\r\n        username = request.form.get('username')\r\n        password = request.form.get('password')\r\n        confirm = request.form.get('confirm')\r\n        email = request.form.get('email')\r\n        try:\r\n            if password.strip().__eq__(confirm.strip()):\r\n\r\n                utils.add_user(username=username,\r\n                               password=password, email=email)\r\n                return redirect(url_for('user_signin'))\r\n            else:\r\n                err_msg = \"Xác nhận mật khẩu không trùng khớp với Mật khẩu !!! \"\r\n        except Exception as ex:\r\n            err_msg = \"Có lỗi xảy ra rồi !! \" + str(ex)\r\n\r\n    return render_template('register.html', err_msg=err_msg)\r\n\r\n\r\n@app.route('/user-login', methods=['post', 'get'])\r\ndef user_signin():\r\n    err_msg = ''\r\n\r\n    if request.method.__eq__('POST'):\r\n        username = request.form.get('username')\r\n        password = request.form.get('password')\r\n\r\n        user = utils.check_login(username=username, password=password)\r\n        if user:\r\n            login_user(user=user)\r\n            return redirect(url_for('home_page'))\r\n        else:\r\n            err_msg = 'Username hay password không đúng, vui lòng kiểm tra lại'\r\n\r\n    return render_template('login.html', err_msg=err_msg)\r\n\r\n\r\n@app.route('/user-logout')\r\ndef user_signout():\r\n    logout_user()\r\n    return redirect(url_for('home_page'))\r\n\r\n\r\n@login.user_loader\r\ndef user_load(user_id):\r\n    return utils.get_user_by_id(user_id=user_id)\r\n\r\n\r\n\r\n@app.route('/contact-page')\r\ndef contact_page():\r\n    return render_template(\"contactPage.html\")\r\n\r\n\r\n\r\n@app.route('/my-room')\r\ndef cart():\r\n    err = \"\"\r\n    cart=[]\r\n    total_money=0\r\n    try:\r\n        cart = utils.get_list_receipt_detail()\r\n        total_money = utils.total_money(user_id=0)\r\n    except:\r\n        err = \"Trang web lỗi! Vui lòng thử lại sau\"\r\n    return render_template('cart.html', list_cart=cart, total_money=total_money, err=err)\r\n\r\n\r\n@app.route('/delete-cart', methods=['post'])\r\ndef delete_cart():\r\n    data = json.loads(request.data)\r\n    id = str(data.get(\"id\"))\r\n    tb = True\r\n    try:\r\n        utils.delete_Receipt_detail(id=id)\r\n    except:\r\n        tb =False\r\n\r\n    total_money = utils.total_money(user_id=0)\r\n\r\n    return jsonify(tb, len(utils.total_room_by_receiptId(0)), total_money)\r\n\r\n\r\n\r\n@app.route(\"/rooms/<int:room_id>\")\r\ndef room_detail_page(room_id):\r\n    room = utils.get_room_by_id(room_id)\r\n    type_room = utils.get_type_room_by_room_id(room_id)\r\n    return render_template('room-detail.html', room=room, type_room=type_room)\r\n\r\n\r\n@app.route('/api/cart', methods=['post'])\r\ndef add_to_cart():\r\n    if 'cart' not in session:\r\n        session['cart'] = {}\r\n\r\n    cart = session['cart']\r\n\r\n    data = json.loads(request.data)\r\n    id = str(data.get(\"id\"))\r\n    name = data.get(\"name\")\r\n    price = data.get(\"price\", 0)\r\n    quantity = 1\r\n\r\n    receive_day = data.get(\"receive-day\")\r\n    pay_day = data.get(\"pay-day\")\r\n    person_amount = str(data.get(\"person-amount\"))\r\n\r\n    cart = session.get('cart')\r\n\r\n    if id in cart:\r\n        cart[id]['quantity'] = cart[id]['quantity'] + 1\r\n    else:\r\n        cart[id] = {\r\n            \"id\": id,\r\n            \"name\": name,\r\n            \"price\": price,\r\n            \"quantity\": 1,\r\n        }\r\n\r\n    session['cart'] = cart\r\n\r\n    booking_infor = {\r\n        \"receive_day\": receive_day,\r\n        \"pay_day\": pay_day,\r\n        \"person_amount\": person_amount\r\n    }\r\n\r\n    utils.add_receipt_detail(room_id=int(id),\r\n                             room_name=name,\r\n                             price=float(price),\r\n                             quantity=float(quantity),\r\n                             receive_day=receive_day,\r\n                             pay_day=pay_day,\r\n                             person_amount=int(person_amount))\r\n    print('person_amount', person_amount)\r\n\r\n    return jsonify(utils.cart_stats(cart), cart, booking_infor, len(utils.total_room_by_receiptId(0)))\r\n\r\n\r\n@app.route('/payment', methods=['post', 'get'])\r\ndef payment_page():\r\n    list_booking_room = utils.get_list_receipt_detail()\r\n    total_price = utils.total_money(user_id=0)\r\n\r\n    # Default variable\r\n    fullname = \"default\"\r\n    email = \"default\"\r\n    nation = \"default\"\r\n    identify = \"default\"\r\n    phone_number = \"default\"\r\n    offline_payment = \"\"\r\n    online_payment = \"\"\r\n    is_sendmail_success = False\r\n\r\n    # Validate variable\r\n    fullname_validate = \"\"\r\n    email_validate = \"\"\r\n    nation_validate = \"\"\r\n    identify_validate = \"\"\r\n    phone_number_validate = \"\"\r\n\r\n    # Open success modal\r\n    is_open_modal = False\r\n\r\n    if request.method.__eq__('POST'):\r\n        fullname = request.form.get('payment-fullname')\r\n        email = request.form.get('payment-email')\r\n        nation = request.form.get('payment-nation')\r\n        identify = request.form.get('payment-identify')\r\n        phone_number = request.form.get('payment-phone-number')\r\n        offline_payment = request.form.get('offline-payment')\r\n        online_payment = request.form.get('online-payment')\r\n\r\n    # Validate fullname\r\n    if fullname == \"\":\r\n        fullname_validate = \"Hãy nhập họ và tên!\"\r\n\r\n    # Validate email\r\n    if email == \"\":\r\n        email_validate = \"Hãy nhập email!\"\r\n    else:\r\n        if re.match(r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b', email) is None and email != \"default\":\r\n            email_validate = \"Email không hợp lệ!\"\r\n\r\n    # Validate nation\r\n    if nation == \"\":\r\n        nation_validate = \"Hãy nhập tên quốc gia/khu vực!\"\r\n\r\n    # Validate identify\r\n    if identify == \"\":\r\n        identify_validate = \"Hãy nhập số CMND/Passport!\"\r\n    else:\r\n        if re.match('^[0-9]+$', identify) is None and email != \"default\":\r\n            identify_validate = \"Số CMND/Passport không hợp lệ!\"\r\n\r\n    # Validate phone number (not work)\r\n    if phone_number == \"\":\r\n        phone_number_validate = \"Hãy nhập số điện thoại!\"\r\n    else:\r\n        if re.match(r\"[\\d]{3}[\\d]{3}[\\d]{3}\", phone_number) is None and email != \"default\":\r\n            phone_number_validate = \"Số điện thoại không hợp lệ!\"\r\n\r\n    # Check data before add to database\r\n    if fullname != \"default\" and fullname != \"\" and fullname_validate == \"\" and \\\r\n            email != \"default\" and email != \"\" and email_validate == \"\" and \\\r\n            nation != \"default\" and nation != \"\" and nation_validate == \"\" and \\\r\n            identify != \"default\" and identify != \"\" and identify_validate == \"\" and \\\r\n            phone_number != \"default\" and phone_number != \"\" and phone_number_validate == \"\":\r\n        utils.add_rental_voucher_detail(visit_name=fullname,\r\n                                        type_visit_id=1,\r\n                                        phone_number=phone_number,\r\n                                        rental_voucher_id=1,\r\n                                        email=email,\r\n                                        visit_name_id=1,\r\n                                        nation=nation)\r\n        utils.add_rental_voucher(booking_date=datetime.now())\r\n\r\n        rental_voucher_detail_id = utils.get_new_record_rental_voucher_detai()[0]\r\n        print('check rental voucher id', rental_voucher_detail_id)\r\n        message = 'XÁC NHẬN ĐẶT PHÒNG THÀNH CÔNG\\n\\nChúng tôi xin trân trọng gửi đến quý khách thư xác nhận rằng quý khách đã thực hiện thao tác đặt phòng thành công.\\nCảm ơn quý khách đã sử dụng dich vụ của Lotus Hotel.\\nMã đặt phòng của quý khách là: ' + str(rental_voucher_detail_id) + ' \\nĐể nhận phòng, quý khách vui lòng trình diện mã đặt phòng cho lễ tân tại sảnh chính khách sạn.\\nXin trân trọng cảm ơn.\\n\\n\\nLIÊN HỆ\\nEmail: hotel.lotus371@gmail.com\\nTổng đài: 1-548-854-8898\\nĐịa chỉ: 371 Nguyễn Kiệm, quận Gò Vấp, TP. Hồ Chí Minh'\r\n\r\n        server = smtplib.SMTP(\"smtp.gmail.com\", 587)\r\n        server.starttls()\r\n        server.login(\"hotel.lotus371@gmail.com\", \"!Hotellotus371\")\r\n        server.sendmail(\"hotel.lotus371@gmail.com\", email, message.encode('utf-8'))\r\n        server.quit()\r\n        try:\r\n            print('check mail sending', server.sendmail(\"hotel.lotus371@gmail.com\", email, message.encode('utf-8')))\r\n        except (IOError, OSError):\r\n            print(\"Handling OSError...\")\r\n        is_sendmail_success = True\r\n\r\n        # Check modal will be open\r\n        if fullname != \"default\" and fullname_validate == \"\" and \\\r\n                email != \"default\" and email_validate == \"\" and \\\r\n                nation != \"default\" and nation_validate == \"\" and \\\r\n                identify != \"default\" and identify_validate == \"\" and \\\r\n                phone_number != \"default\" and phone_number_validate == \"\" and \\\r\n                is_sendmail_success is True:\r\n            is_open_modal = True\r\n\r\n    return render_template('payment.html',\r\n                           list_booking_room=list_booking_room,\r\n                           total_price=total_price,\r\n                           fullname_validate=fullname_validate,\r\n                           email_validate=email_validate,\r\n                           nation_validate=nation_validate,\r\n                           identify_validate=identify_validate,\r\n                           phone_number_validate=phone_number_validate,\r\n                           is_open_modal=is_open_modal,\r\n                           is_sendmail_success=is_sendmail_success)\r\n\r\n\r\n@app.route('/payment/success')\r\ndef payment_success_page():\r\n    booking_room_backup = utils.get_list_receipt_detail()\r\n\r\n    for row in booking_room_backup:\r\n        booking_room_id = row[8]\r\n        booking_room_name = row[1]\r\n        booking_room_image = row[0]\r\n        booking_room_receive_day = row[6]\r\n        booking_room_pay_day = row[3]\r\n        booking_room_price = row[4]\r\n        booking_room_person_amount = row[7]\r\n\r\n        # Backup data receipt detail to booking room before delete receipt detail\r\n        utils.add_booking_room(room_id=booking_room_id,\r\n                               room_name=booking_room_name,\r\n                               price=booking_room_price,\r\n                               image=booking_room_image,\r\n                               receive_day=booking_room_receive_day,\r\n                               pay_day=booking_room_pay_day,\r\n                               person_amount=booking_room_person_amount,\r\n                               rental_voucher_detail_id=1)\r\n\r\n    # Delete all receipt detail when payment success\r\n    utils.delete_all_receipt_detail()\r\n    return render_template(\"payment-success.html\")\r\n\r\n\r\n\r\n@app.route('/history')\r\ndef history():\r\n    id_new = utils.get_new_record_rental_voucher_detai()\r\n\r\n    info_payer = utils.get_info_payer(id_new.id)\r\n\r\n    list_booking_room = utils.get_info_booking_room()\r\n\r\n    total_money = utils.total_money_booking_room()\r\n\r\n    return render_template(\"history-payments.html\", info_payer=info_payer, list_booking_room=list_booking_room,total_money=total_money)\r\n\r\n@app.route('/check-in', methods=['post'])\r\ndef check_in():\r\n    flag = True\r\n    try:\r\n        utils.delete_Receipt_detail()\r\n    except:\r\n        flag = False\r\n    return jsonify(flag)\r\n\r\n<<<<<<< HEAD\r\n@app.route('/gallery')\r\ndef gallery_image_page():\r\n    return render_template('gallery.html')\r\n\r\n=======\r\n@app.route('/history')\r\ndef history():\r\n    id_new = utils.get_new_record_rental_voucher_detai()\r\n\r\n    info_payer = utils.get_info_payer(id_new.id)\r\n\r\n    return render_template(\"history-payments.html\", info_payer=info_payer)\r\n>>>>>>> d4eed1c (a)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    from src.admin import *\r\n\r\n    app.run(debug=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.py b/src/index.py
--- a/src/index.py	(revision 6bee408f1aeaa7b2d77073d60804264e40005d55)
+++ b/src/index.py	(date 1641819443914)
@@ -363,26 +363,20 @@
 @app.route('/check-in', methods=['post'])
 def check_in():
     flag = True
+    data = json.loads(request.data)
+    id = data.get("id")
     try:
-        utils.delete_Receipt_detail()
+        utils.delete_Receipt_detail(id)
     except:
         flag = False
     return jsonify(flag)
 
-<<<<<<< HEAD
+
 @app.route('/gallery')
 def gallery_image_page():
     return render_template('gallery.html')
 
-=======
-@app.route('/history')
-def history():
-    id_new = utils.get_new_record_rental_voucher_detai()
 
-    info_payer = utils.get_info_payer(id_new.id)
-
-    return render_template("history-payments.html", info_payer=info_payer)
->>>>>>> d4eed1c (a)
 
 
 if __name__ == "__main__":
Index: src/static/js/support.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>window.onscroll = function() {\r\n                                scrollFunction();\r\n                                header_fixed();\r\n                                scrollIndicator()};\r\n\r\nfunction scrollFunction() {\r\n    if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n        document.getElementById(\"back-to-top\").style.display = \"block\";\r\n    } else {\r\n        document.getElementById(\"back-to-top\").style.display = \"none\";\r\n    }\r\n}\r\n\r\n// scroll to the top\r\nfunction topFunction(){\r\n    $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n}\r\n\r\n// header-fixed\r\nfunction header_fixed(){\r\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\r\n        document.getElementById(\"header-fixed\").style.position = \"fixed\"\r\n        document.getElementById(\"header-fixed\").style.width = \"100%\"\r\n        document.getElementById(\"header-fixed\").style.zIndex = \"1000000\"\r\n        document.getElementById(\"header-fixed\").style.top = \"0%\"\r\n    } else {\r\n        document.getElementById(\"header-fixed\").style.position = \"initial\";\r\n    }\r\n}\r\n\r\n\r\nfunction scrollIndicator() {\r\n      var winScroll = document.body.scrollTop || document.documentElement.scrollTop;\r\n      var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\r\n      var scrolled = (winScroll / height) * 100;\r\n      document.getElementById(\"myBar\").style.width = scrolled + \"%\";\r\n      if (document.body.scrollTop > 45 || document.documentElement.scrollTop > 45) {\r\n        document.getElementById(\"header-top\").style.display = \"none\";\r\n      }else {\r\n        document.getElementById(\"header-top\").style.display = \"\";\r\n    }\r\n}\r\n\r\n\r\nfunction deleteBookingRoom(){\r\n    event.preventDefault();\r\n    fetch('/check-in', {\r\n        method: 'post',\r\n        body: JSON.stringify({\r\n        }),\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(\r\n    res => {\r\n        if (res) {\r\n            if (res?.status !== 500) {\r\n                console.log(\"Thao tác thành công\")\r\n                return res.json()\r\n            }\r\n            else {\r\n                console.log(\"Thao tác thất bại\", res?.statusText)\r\n            }\r\n        }\r\n    }\r\n    ).then(data => {\r\n        if(data == true){\r\n            document.getElementById(\"border-history\").style.display = \"none\"\r\n            document.getElementById(\"tb-his\").style.display = \"\"\r\n        }\r\n    }\r\n    ).catch(err => {\r\n            console.log(err);\r\n        }\r\n    );\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/static/js/support.js b/src/static/js/support.js
--- a/src/static/js/support.js	(revision 6bee408f1aeaa7b2d77073d60804264e40005d55)
+++ b/src/static/js/support.js	(date 1641760966943)
@@ -42,37 +42,4 @@
 }
 
 
-function deleteBookingRoom(){
-    event.preventDefault();
-    fetch('/check-in', {
-        method: 'post',
-        body: JSON.stringify({
-        }),
-        headers: {
-            'Context-Type': 'application/json'
-        }
-    }).then(
-    res => {
-        if (res) {
-            if (res?.status !== 500) {
-                console.log("Thao tác thành công")
-                return res.json()
-            }
-            else {
-                console.log("Thao tác thất bại", res?.statusText)
-            }
-        }
-    }
-    ).then(data => {
-        if(data == true){
-            document.getElementById("border-history").style.display = "none"
-            document.getElementById("tb-his").style.display = ""
-        }
-    }
-    ).catch(err => {
-            console.log(err);
-        }
-    );
-}
-
 
Index: src/static/js/history.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/static/js/history.js b/src/static/js/history.js
new file mode 100644
--- /dev/null	(date 1641819505104)
+++ b/src/static/js/history.js	(date 1641819505104)
@@ -0,0 +1,52 @@
+let id;
+
+function searchBookingRoom(e, element){
+    if(e.keyCode == 13){
+        text = element.value;
+        element.value = "";
+        l = document.getElementById("list-room");
+        listRoom = l.getElementsByClassName("room-cart")
+        for (i= 0; i < listRoom.length; i++){
+            listRoom[i].style.display = "none";
+            if(listRoom[i].id == text){
+                listRoom[i].style.display = "";
+                document.getElementById("btn-check-in").disabled = false;
+                id =text;
+            }
+        }
+    }
+}
+
+function deleteBookingRoom(){
+    event.preventDefault();
+    fetch('/check-in', {
+        method: 'post',
+        body: JSON.stringify({
+            "id": id
+        }),
+        headers: {
+            'Context-Type': 'application/json'
+        }
+    }).then(
+    res => {
+        if (res) {
+            if (res?.status !== 500) {
+                console.log("Thao tác thành công")
+                return res.json()
+            }
+            else {
+                console.log("Thao tác thất bại", res?.statusText)
+            }
+        }
+    }
+    ).then(data => {
+        if(data == true){
+            document.getElementById("border-history").style.display = "none"
+            document.getElementById("tb-his").style.display = ""
+        }
+    }
+    ).catch(err => {
+            console.log(err);
+        }
+    );
+}
\ No newline at end of file
Index: src/templates/layout/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>\r\n      {% block title %}{% endblock %}\r\n    </title>\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,600;1,300;1,400;1,700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n      rel=\"stylesheet\">\r\n    <script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n\r\n    <!-- CSS only -->\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n          integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    <!-- JavaScript Bundle with Popper -->\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\r\n            integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\r\n            crossorigin=\"anonymous\"></script>\r\n\r\n    <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.10.0/css/all.css\"\r\n          integrity=\"sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p\" crossorigin=\"anonymous\"/>\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n          integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n    <script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\"\r\n            integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\"\r\n            crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\"\r\n            integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\"\r\n            crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"\r\n            integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\r\n            crossorigin=\"anonymous\"></script>\r\n\r\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/jquery/latest/jquery.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/momentjs/latest/moment.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js\"></script>\r\n\r\n    <link rel=\"icon\" href=\"https://res.cloudinary.com/dwgjmgf6o/image/upload/v1641631419/icons/tab-mini-icon_hkiuby.png\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\"/>\r\n    <script src=\"{{ url_for('static', filename='js/cart.js') }}\"></script>\r\n    <script src=\"{{ url_for('static', filename='js/support.js') }}\"></script>\r\n    <script src=\"{{ url_for('static', filename='js/payment.js') }}\"></script>\r\n    <script src=\"{{ url_for('static', filename='js/home.js') }}\"></script>\r\n    <link href=\"{{ url_for('static', filename='css/style.css')}}\" rel=\"stylesheet\"/>\r\n    <link href=\"{{ url_for('static', filename='css/history.css')}}\" rel=\"stylesheet\"/>\r\n    {% block css %}{% endblock %}\r\n    {% block js %}{% endblock %}\r\n</head>\r\n<body>\r\n    <!-- back to top-->\r\n    <div title=\"Back to top\" id=\"back-to-top\" onclick=\"topFunction()\"><i class=\"fa fa-angle-double-up \"></i></div>\r\n    {% block header %}\r\n        {% include 'layout/header.html' %}\r\n    {% endblock %}\r\n\r\n    {% block content %}{% endblock %}\r\n\r\n    {% block footer %}\r\n            {% include 'layout/footer.html' %}\r\n    {% endblock %}\r\n\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/templates/layout/base.html b/src/templates/layout/base.html
--- a/src/templates/layout/base.html	(revision 6bee408f1aeaa7b2d77073d60804264e40005d55)
+++ b/src/templates/layout/base.html	(date 1641752284583)
@@ -44,6 +44,7 @@
     <script src="{{ url_for('static', filename='js/support.js') }}"></script>
     <script src="{{ url_for('static', filename='js/payment.js') }}"></script>
     <script src="{{ url_for('static', filename='js/home.js') }}"></script>
+    <script src="{{ url_for('static', filename='js/history.js') }}"></script>
     <link href="{{ url_for('static', filename='css/style.css')}}" rel="stylesheet"/>
     <link href="{{ url_for('static', filename='css/history.css')}}" rel="stylesheet"/>
     {% block css %}{% endblock %}
